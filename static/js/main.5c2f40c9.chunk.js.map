{"version":3,"sources":["components/forms/Form.js","components/forms/Tables.js","modules/requests.js","components/Confirm.js","components/Search.js","App.js","index.js"],"names":["Form","_ref","data","react_default","a","createElement","className","type","onChange","e","FirstName","target","value","LastName","Date","min","max","PartySize","required","From","To","Mobile","Tables","tb","TableID","name","table","Number","fetcher","_callee","url","method","body","resp","json","_regeneratorRuntime","wrap","_context","prev","next","fetch","headers","Content-Type","sent","abrupt","Promise","resolve","stop","getAvailability","event","setRes","setErr","preventDefault","console","log","concat","then","r","errors","catch","err","sendBooking","formData","setBookId","JSON","stringify","res","insertId","alert","get_booking","queryData","setIsSearched","setData","id","lName","Confirm","dataArr","setRefresh","map","kv_pair","key","onClick","delete_booking","Search","onSubmit","placeholder","App","show","_useState","useState","_useState2","Object","slicedToArray","availability","setAvailability","_useState3","_useState4","bookId","_useState5","_useState6","formErrors","setFormErrors","_useState7","_useState8","isSearched","_useState9","_useState10","_useState11","_useState12","refresh","_useState13","Table","_useState14","showErrors","error","msg","forms_Tables","components_Confirm","entries","forms_Form","components_Search","B","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"6LAsDeA,SArDF,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAEZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,8CAKJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,SAAU,SAAAC,GAAOP,EAAKQ,UAAYD,EAAEE,OAAOC,UAGlET,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,SAAU,SAAAC,GAAOP,EAAKW,SAAWJ,EAAEE,OAAOC,UAGjET,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,SAAU,SAAAC,GAAOP,EAAKY,KAAOL,EAAEE,OAAOC,UAG7DT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASQ,IAAI,IAAIC,IAAI,KAAKR,SAAU,SAAAC,GAAOP,EAAKe,UAAYR,EAAEE,OAAOC,OAASM,UAAQ,KAGtGf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOQ,IAAI,QAAQC,IAAI,QAAQR,SAAU,SAAAC,GAAOP,EAAKiB,KAAOV,EAAEE,OAAOC,OAASM,UAAQ,KAGtGf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOQ,IAAI,QAAQC,IAAI,QAAQR,SAAU,SAAAC,GAAOP,EAAKkB,GAAKX,EAAEE,OAAOC,OAASM,UAAQ,KAGpGf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,MAAMC,SAAU,SAAAC,GAAOP,EAAKmB,OAASZ,EAAEE,OAAOC,OAASM,UAAQ,KAG/Ef,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASK,MAAM,2BCpC5BU,EAVA,SAAArB,GAAkB,IAAfsB,EAAetB,EAAfsB,GAAIrB,EAAWD,EAAXC,KAElB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBAAckB,EAAGC,SACjBrB,EAAAC,EAAAC,cAAA,SAAOE,KAAK,QAAQkB,KAAK,cAAcb,MAAOW,EAAGC,QAAShB,SAAU,kBAAMN,EAAKwB,MAAQC,OAAOJ,EAAGC,+yMCL9FI,mFAAf,SAAAC,EAAuBC,EAAKC,EAAQC,GAApC,IAAAC,EAAAC,EAAA,OAAAC,IAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC2BC,MAAMV,EAAK,CAAEC,OAAQA,EAAQC,KAAMA,EAAMS,QAAS,CAAEC,eAAgB,sBAD/F,cACcT,EADdI,EAAAM,KAEcT,EAAOD,EAAKC,OAF1BG,EAAAO,OAAA,SAGeC,QAAQC,QAAQZ,IAH/B,wBAAAG,EAAAU,SAAAlB,6BAOA,IAAMmB,EAAkB,SAACC,EAAO/C,EAAMgD,EAAQC,GACtCF,EAAMG,iBAD2C,IAEzCnC,EAAsCf,EAAtCe,UAAWH,EAA2BZ,EAA3BY,KAAMK,EAAqBjB,EAArBiB,KAAMC,EAAelB,EAAfkB,GAAIC,EAAWnB,EAAXmB,OACnCgC,QAAQC,IAAIpD,GAEZ0B,EADS,0EAAA2B,OAA6EtC,EAA7E,UAAAsC,OAA+FzC,EAA/F,iBAAAyC,OAAmHpC,EAAnH,kBAAAoC,OAAwInC,EAAxI,aAAAmC,OAAsJlC,GAClJ,MAAO,MACXmC,KAAK,SAAAC,GACMA,EAAEC,OACEP,EAAOM,EAAEC,QAGTR,EAAOO,KAGtBE,MAAM,SAAAC,GAAG,OAAIP,QAAQC,IAAIM,MAGpCC,EAAc,SAACZ,EAAOa,EAAUC,GAC9Bd,EAAMG,iBAGNxB,EAFY,wDAEC,OAAQoC,KAAKC,UAAUH,IAC3BN,KAAK,SAAAU,GACMA,EAAIC,SACAJ,EAAUG,EAAIC,UAEdC,MAAM,8BAOhCC,EAAc,SAACpB,EAAOqB,EAAWC,EAAeC,GAC9CvB,EAAMG,iBAENxB,EADS,iEAAA2B,OAAoEe,EAAUG,GAA9E,WAAAlB,OAA0Fe,EAAUI,OAChG,MAAO,MACXlB,KAAK,SAAAC,GACMA,EAAE,IACEc,GAAc,GACdC,EAAQf,EAAE,KAEVW,MAAM,oCCjBvBO,EA9BC,SAAA1E,GAAiC,IAA9BwE,EAA8BxE,EAA9BwE,GAAIG,EAA0B3E,EAA1B2E,QAASC,EAAiB5E,EAAjB4E,WAK/B,OACC1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,oCACyBoE,IAG1BtE,EAAAC,EAAAC,cAAA,WAEEuE,EAAQE,IAAK,SAAAC,GAAO,OAAI5E,EAAAC,EAAAC,cAAA,OAAK2E,IAAKD,EAAQ,IAAI5E,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,YAAO0E,EAAQ,GAAf,KAA2BA,EAAQ,QAItF5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAAS0E,QAAS,kBAAMJ,GAAW,KAAhD,SAED1E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAAS0E,QAAU,SAAAxE,GAAC,OD8Bf,SAACwC,EAAO4B,EAAYD,GACnC3B,EAAMG,iBAGNxB,EAFY,2DAEC,SADAoC,KAAKC,UAAU,CAACQ,GAAIG,EAAQ,GAAG,MAEnCpB,KAAK,SAAAvB,GACEmC,MAAM,mBACNS,GAAW,GACXxB,QAAQC,IAAIrB,KACjB0B,MAAO,SAAAC,GACFQ,MAAM,gCACNf,QAAQC,IAAIM,KCzCMsB,CAAezE,EAAGoE,EAAYD,KAAnE,sBCHUO,EApBA,SAAAlF,GAAwD,IAArDoE,EAAqDpE,EAArDoE,YAAaC,EAAwCrE,EAAxCqE,UAAWC,EAA6BtE,EAA7BsE,cAAeC,EAAcvE,EAAduE,QACtD,OACGrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACTH,EAAAC,EAAAC,cAAA,kBAGHF,EAAAC,EAAAC,cAAA,QAAM+E,SAAU,SAAC3E,GAAD,OAAO4D,EAAY5D,EAAG6D,EAAWC,EAAeC,KAC7DrE,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO8E,YAAY,0BAA0B7E,SAAU,SAAAC,GAAC,OAAI6D,EAAUG,GAAKhE,EAAEE,OAAOC,UAGnGT,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAO8E,YAAY,kBAAkB7E,SAAU,SAAAC,GAAC,OAAI6D,EAAUI,MAAQjE,EAAEE,OAAOC,UAE9FT,EAAAC,EAAAC,cAAA,SAAOE,KAAK,cCoGT+E,MA3Gf,WAAe,IAqBPC,EArBOC,EAC6BC,qBAD7BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACJK,EADIH,EAAA,GACUI,EADVJ,EAAA,GAAAK,EAEiBN,qBAFjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEJE,EAFID,EAAA,GAEIjC,EAFJiC,EAAA,GAAAE,EAGyBT,qBAHzBU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGJE,EAHID,EAAA,GAGQE,EAHRF,EAAA,GAAAG,EAIyBb,oBAAS,GAJlCc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAIJE,EAJID,EAAA,GAIQhC,EAJRgC,EAAA,GAAAE,EAKuBhB,mBAAS,CAAChB,GAAI,GAAGC,MAAO,KAL/CgC,EAAAf,OAAAC,EAAA,EAAAD,CAAAc,EAAA,GAKJnC,EALIoC,EAAA,GAAAC,GAAAD,EAAA,GAMmBjB,oBAAS,IAN5BmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAMJE,EANID,EAAA,GAMK/B,EANL+B,EAAA,GAAAE,EAOarB,mBAAS,CAC7B3E,KAAM,GACNG,UAAW,GACXE,KAAM,GACNC,GAAI,GACJ2F,MAAO,GACPrG,UAAW,GACXG,SAAU,GACVQ,OAAQ,KAfD2F,EAAArB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAOJ5G,EAPI8G,EAAA,GAOExC,EAPFwC,EAAA,GAsBPC,EAAa,GAsEjB,OArEIb,IACAa,EACI9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEP8F,EAAWtB,IAAI,SAAAoC,GAAK,OAChB/G,EAAAC,EAAAC,cAAA,mBAAW6G,EAAMC,SASjC5B,GAFCU,GAAUJ,EAGP1F,EAAAC,EAAAC,cAAA,QAAM+E,SAAU,SAAA3E,GAAC,OAAIoD,EAAYpD,EAAGP,EAAM6D,IAAYzD,UAAU,aAExDuF,EAAaf,IAAI,SAAAvD,GAAE,OAAIpB,EAAAC,EAAAC,cAAC+G,EAAD,CAAQ7F,GAAIA,EAAIrB,KAAMA,EAAM8E,IAAKzD,EAAGC,YAE/DrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,SAASK,MAAM,OAAON,UAAU,aAIhD2F,EAYD9F,EAAAC,EAAAC,cAACgH,EAAD,CAAS5C,GAAIwB,EAAQrB,QAASe,OAAO2B,QAAQpH,GAAO2E,WAAYA,IAVnE1E,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,QAAM+E,SAAU,SAAA3E,GAAC,OAAIuC,EAAgBvC,EAAGP,EAAM4F,EAAiBO,KAC9DY,EACG9G,EAAAC,EAAAC,cAACkH,EAAD,CAAMrH,KAAMA,KAEhBC,EAAAC,EAAAC,cAACmH,EAAD,CAAQnD,YAAaA,EAAaC,UAAWA,EAAWC,cAAeA,EAAeC,QAASA,KAOvGgC,GAActG,IACdqF,EAAOpF,EAAAC,EAAAC,cAACgH,EAAD,CAAS5C,GAAIvE,EAAKuH,EAAG7C,QAASe,OAAO2B,QAAQpH,GAAO2E,WAAYA,KAOxEgC,IACCf,IACA/B,IACAsC,IACA9B,GAAc,GACdM,GAAW,GACXL,EAAQ,CACJ1D,KAAM,GACNG,UAAW,GACXE,KAAM,GACNC,GAAI,GACJ2F,MAAO,GACPrG,UAAW,GACXG,SAAU,GACVQ,OAAQ,MASZlB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,2BAIJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACViF,KCxGJmC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAED3H,EAAAC,EAAAC,cAAC0H,EAAD","file":"static/js/main.5c2f40c9.chunk.js","sourcesContent":["import React from 'react'\nconst Form = ({ data }) => {\n\n    return (\n        <div className='main-form'>\n            <div className='instruction'>\n                <h>\n                    Please enter booking information\n                </h>\n            </div>\n\n            <div>\n                <label>First Name:</label>\n                <input type=\"text\" onChange={e => { data.FirstName = e.target.value }} />\n            </div>\n\n            <div>\n                <label>Last Name:</label>\n                <input type=\"text\" onChange={e => { data.LastName = e.target.value }} />\n            </div>\n\n            <div>\n                <label>Date:</label>\n                <input type=\"date\" onChange={e => { data.Date = e.target.value }} />\n            </div>\n\n            <div>\n                <label>No. People:</label>\n                <input type='number' min=\"1\" max=\"10\" onChange={e => { data.PartySize = e.target.value }} required />\n            </div>\n\n            <div>\n                <label>From:</label>\n                <input type=\"time\" min=\"09:00\" max=\"17:00\" onChange={e => { data.From = e.target.value }} required />\n            </div>\n\n            <div>\n                <label>Until:</label>\n                <input type=\"time\" min=\"09:00\" max=\"17:00\" onChange={e => { data.To = e.target.value }} required />\n            </div>\n\n            <div>\n                <label>Mobile:</label>\n                <input type=\"tel\" onChange={e => { data.Mobile = e.target.value }} required />\n            </div>\n\n            <div className='submit'>\n                <input type='submit' value=\"Check Availability\" />\n            </div>\n\n        </div>\n    )\n}\n\nexport default Form\n","import React from 'react'\nconst Tables = ({ tb, data }) => {\n\n    return (\n        <div>\n            <label>Table {tb.TableID}</label>\n            <input type=\"radio\" name=\"tableSelect\" value={tb.TableID} onChange={() => data.table = Number(tb.TableID)} />\n        </div>\n    )\n}\n\nexport default Tables","\nasync function fetcher(url, method, body) {\n        const resp = await fetch(url, { method: method, body: body, headers: { 'Content-Type': 'application/json' }})\n        const json = resp.json()\n        return Promise.resolve(json)\n    }\n    \n\nconst getAvailability = (event, data, setRes, setErr) => {\n        event.preventDefault()\n        const { PartySize, Date, From, To, Mobile } = data\n        console.log(data)\n        const url = `https://le-restaurant-heroku.herokuapp.com/checkAvailability?partySize=${PartySize}&date=${Date}&CheckInTime=${From}&CheckOutTime=${To}&&Mobile=${Mobile}`\n        fetcher(url, 'GET', null)\n                .then(r => {\n                        if (r.errors) {\n                                setErr(r.errors)\n                        } else {\n                                \n                                setRes(r)\n                        }\n                })\n                .catch(err => console.log(err))\n}\n\nconst sendBooking = (event, formData, setBookId) => {\n        event.preventDefault()\n        const url = 'https://le-restaurant-heroku.herokuapp.com/addBooking'\n\n        fetcher(url, \"POST\", JSON.stringify(formData))\n                .then(res => {\n                        if (res.insertId) {\n                                setBookId(res.insertId)\n                        } else {\n                                alert(\"Error. Please try again\")\n                        }\n                }\n                )\n}\n\n\nconst get_booking = (event, queryData, setIsSearched, setData) => {\n        event.preventDefault()\n        const url = `https://le-restaurant-heroku.herokuapp.com/retrieveBooking?id=${queryData.id}&lName=${queryData.lName}`\n        fetcher(url, \"GET\", null)\n                .then(r => {\n                        if (r[0]) {\n                                setIsSearched(true)\n                                setData(r[0])\n                        } else {\n                                alert(\"Error: Booking does not exist\")\n                        }\n                })\n}\n\n\nconst delete_booking = (event, setRefresh, dataArr) => {\n        event.preventDefault()\n        const url = \"https://le-restaurant-heroku.herokuapp.com/deleteBooking\"\n        const body = JSON.stringify({id: dataArr[0][1]})\n        fetcher(url, \"DELETE\", body)\n                .then(resp => {\n                        alert(\"Booking Deleted\")\n                        setRefresh(true)\n                        console.log(resp)\n                }).catch( err =>{ \n                        alert(\"Error while deleting booking\")\n                        console.log(err)\n                })\n} \n\n\nexport { getAvailability, sendBooking, get_booking, delete_booking}","import React from 'react'\nimport { delete_booking } from '../modules/requests'\n\nconst Confirm = ({ id, dataArr, setRefresh }) => {\n\n\n\n\n\treturn (\n\t\t<div className='confirm-booking'>\n\t\t\t<div>\n\t\t\t\t<h2>\n\t\t\t\t\tYour booking reference {id}\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tdataArr.map( kv_pair => <div key={kv_pair[0]}><p><span>{kv_pair[0]}:</span>{kv_pair[1]}</p></div>)\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className='option-buttons'>\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"button\" onClick={() => setRefresh(true)}>home</button>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"button\" onClick={ e => delete_booking(e, setRefresh, dataArr)}>Delete booking</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Confirm","import React, { useState } from 'react'\n\n\nconst Search = ({ get_booking, queryData, setIsSearched, setData }) => {\n   return (\n      <div className='search'>\n            <h>\n               Or...\n            </h>\n         <form onSubmit={(e) => get_booking(e, queryData, setIsSearched, setData)}>\n            <div>\n               <input type=\"text\" placeholder='Enter booking reference' onChange={e => queryData.id = e.target.value} />\n            </div>\n\n            <div>\n               <input type=\"text\" placeholder='Enter Last Name' onChange={e => queryData.lName = e.target.value} />\n            </div>\n            <input type=\"submit\" />\n         </form>\n      </div>\n   )\n}\n\nexport default Search","import './App.css';\nimport React from 'react';\nimport { useState } from 'react'\n\nimport Form from './components/forms/Form';\nimport Tables from './components/forms/Tables';\nimport Confirm from './components/Confirm';\nimport Search from './components/Search';\nimport {getAvailability, sendBooking, get_booking} from './modules/requests'\n\nfunction App() {\n    const [availability, setAvailability] = useState()\n    const [bookId, setBookId] = useState()\n    const [formErrors, setFormErrors] = useState()\n    const [isSearched, setIsSearched] = useState(false)\n    const [queryData, setQueryData] = useState({id: '',lName: ''})\n    const [refresh, setRefresh] = useState(false)\n    const [data, setData] = useState({\n        Date: '',\n        PartySize: '',\n        From: '',\n        To: '',\n        Table: '',\n        FirstName: '',\n        LastName: '',\n        Mobile: '',\n    })\n\n\n    //conditional rendering logic vv\n\n    var show\n    var showErrors = \"\"\n    if (formErrors){\n        showErrors = (\n            <div className='errors'>\n                {\n                    formErrors.map(error => (\n                        <p>Error: {error.msg}</p>\n                    ))\n                }\n            </div>\n        )\n        \n    }\n    if (!bookId && availability) {\n        //setFormErrors()\n        show = (\n            <form onSubmit={e => sendBooking(e, data, setBookId)} className=\"main-form\">\n                {\n                    availability.map(tb => <Tables tb={tb} data={data} key={tb.TableID} />)\n                }\n                <div>\n                    <input type=\"submit\" value=\"Book\" className='submit'/>\n                </div>\n            </form>\n        )\n    } else if (!bookId) {\n        show = (\n            <div>\n                \n                <form onSubmit={e => getAvailability(e, data, setAvailability, setFormErrors)}>\n                {showErrors}\n                    <Form data={data} />\n                </form>\n                <Search get_booking={get_booking} queryData={queryData} setIsSearched={setIsSearched} setData={setData}/>\n            </div>)\n    } else {\n        //etFormErrors()\n        show = <Confirm id={bookId} dataArr={Object.entries(data)} setRefresh={setRefresh} /> \n    }\n\n    if (isSearched && data){ //when a booking is searched, display that booking\n        show = <Confirm id={data.B} dataArr={Object.entries(data)} setRefresh={setRefresh}/>\n    }\n\n\n\n\n\n    if(refresh){ \n        setAvailability()\n        setBookId()\n        setFormErrors()\n        setIsSearched(false)\n        setRefresh(false)\n        setData({\n            Date: '',\n            PartySize: '',\n            From: '',\n            To: '',\n            Table: '',\n            FirstName: '',\n            LastName: '',\n            Mobile: '',\n        })\n    }\n\n\n\n\n\n    return (\n        <div>\n            <div className='title'>\n                <h1>\n                    LeRestaurant\n                </h1>\n            </div>\n            <div className='form-container'>\n                {show}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n    <App />\n\n    \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vital\n"],"sourceRoot":""}